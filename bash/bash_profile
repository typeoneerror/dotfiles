# Prompt
PS1='\w $ '

# Paths
export PATH=$HOME/bin:/usr/local/bin:$PATH

# General
alias chromed='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --enable-nacl'
alias dev='cd $HOME/Dev'
alias dnsflush='dscacheutil -flushcache; sudo killall -HUP mDNSResponder;'
alias dt='cd $HOME/Desktop'
alias gdiff='git diff | mate'
alias gdiffb='git log master.. --oneline | wc -l'
alias sdiff='svn diff | mate'
alias ll='ls -al'
alias mmysql=/Applications/MAMP/Library/bin/mysql
alias mmysqldump=/Applications/MAMP/Library/bin/mysqldump
alias npm-exec='PATH=$(npm bin):$PATH'
alias so='du -sh'
alias svnsti='svn status --ignore-externals --quiet'

# Rails
alias migrate='rake db:migrate; rake db:migrate RAILS_ENV=test;'

# Use Vim for editing
export EDITOR='vim'

# Path to Solr
export SOLR_HOME=$HOME/solr

# Git configuration for colors
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true

# Tessel
export DYLD_LIBRARY_PATH="/usr/local/Cellar/imagemagick/6.8.9-8/lib"

# FFFFUUU .DS_Store
export FIGNORE=$FIGNORE:.DS_Store

# Certificate fixes for OpenSSL
export SSL_CERT_FILE=/usr/local/etc/openssl/cert.pem

# Colorized prompt
# fg/bg
#
# a = black
# b = red
# c = green
# d = brown
# e = blue
# f = magenta
# g = cyan
# h = light gray
# x = default
#
# DIR
# SYM_LINK
# SOCKET
# PIPE
# EXE
# BLOCK_SP
# CHAR_SP
# EXE_SUID
# EXE_GUID
# DIR_STICKY
# DIR_WO_STICKY
export CLICOLOR=1
export LSCOLORS=CxDxCxDxbxegedabagacad

# Add svn:keywords Id property recursively
function svn_add_id
{
  find . \( -name "*.as" -o \
            -name "*.css" -o \
            -name "*.cpp" -o \
            -name "*.email" -o \
            -name "*.h" -o \
            -name "*.ini" -o \
            -name "*.js" -o \
            -name "*.m" -o \
            -name "*.mm" -o \
            -name "*.mxml" -o \
            -name "*.php" -o \
            -name "*.phtml" -o \
            -name "*.xml" \) -exec svn propset svn:keywords Id {} \;
}

# Add files via svn
function svn_add
{
    svn add --force .
}

# Delete things not added
function svn_del
{
    svn status | grep '\!' | awk '{print $2;}' | xargs svn rm;
}

# Start postgre
function pg_start
{
    pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
}

# Stop postgre
function pg_stop
{
    pg_ctl -D /usr/local/var/postgres stop -s -m fast
}

# This loads RVM into a shell session.
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# And this loads NVM into the shell session
# source "$HOME/.nvm/nvm.sh"

##
# history_of_file
#
# Outputs the full history of a given file as a sequence of
# logentry/diff pairs.  The first revision of the file is emitted as
# full text since there's not previous version to compare it to.
function history_of_file() {
    url=$1 # current url of file
    svn log -q $url | grep -E -e "^r[[:digit:]]+" -o | cut -c2- | sort -n | {
        # first revision as full text
        echo
        read r
        svn log -r$r $url@HEAD
        svn cat -r$r $url@HEAD
        echo

        # remaining revisions as differences to previous revision
        while read r
        do
            echo
            svn log -r$r $url@HEAD
            svn diff -c$r $url@HEAD
            echo
        done
    }
}

source $HOME/.colors

# Show git branch with color in prompt
function color_my_prompt
{
    local user_and_host="\[${wHITE}\][\u]"
    local current_location="\[${wHITE}\]\w"
    local git_branch_color="\[${pURPLE}\]"
    local git_branch='`git branch 2> /dev/null | grep -e ^* | sed -E  s/^\\\\\*\ \(.+\)$/\(\\\\\1\)\ /`'
    local prompt_tail="\[${wHITE}\]$"
    local last_color="\[${off}\]"
    export PS1="$current_location $git_branch_color$git_branch$prompt_tail$last_color "
}
color_my_prompt

# Show empty directories
function show_empty
{
    find . -type d -empty -exec ls -ld {} \;
}

# Remove .DS_Store files
function remove_ds_store
{
    find . -name .DS_Store -type f -delete
}

function set_hidden_files_flag()
{
    defaults write com.apple.finder AppleShowAllFiles $1
    killall Finder
}

function show_hidden_files
{
    set_hidden_files_flag YES
}

function hide_hidden_files
{
    set_hidden_files_flag NO
}

function process_at_port
{
  lsof -i :$1
}

function kill_process_at_port
{
  kill `process_at_port $1`
}
