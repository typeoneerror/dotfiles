[init]
  defaultBranch = main
[include]
  path = ~/.gitconfig.signingkey
[user]
  name = Benjamin Borowski
  email = ben@weareokidoki.com
[alias]
  annotate  = blame
  br        = branch
  ci        = commit
  cne       = commit --all --amend --no-edit
  co        = checkout
  cp        = cherry-pick
  cpn       = cherry-pick -n
  di        = diff
  diffa     = diff --color --word-diff-regex=.
  diffc     = diff --color-words=.
  diffl     = diff --ignore-space-at-eol
  diffo     = diff master..
  diffm     = diff --diff-filter=M
  diffn     = diff --name-only
  diffw     = diff --word-diff=plain
  do        = !sh -c 'BRANCH=$(git rev-parse --abbrev-ref HEAD) && git diff origin/$BRANCH' -
  ds        = diff --staged
  fetchall  = fetch -v --all
  fix       = !sh -c 'REV=$(git rev-parse $1) && git add . && git commit --fixup $@ && git rebase -i --autosquash $REV^' -
  gh        = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/tree/$(git rev-parse --abbrev-ref HEAD)\""
  hist      = log --follow -p
  ji        = !sh -c 'REV=$(git rev-parse --abbrev-ref HEAD) && git commit -m \"[$REV] $1\"' -
  la        = rev-parse HEAD
  las       = rev-parse --short HEAD
  ll        = log --oneline
  lf        = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(cyan)<%an>%Creset' --abbrev-commit --date=relative
  lm        = log --author=USERNAME --pretty=format:'%h %cd %s' --date=short
  ln        = log --graph --decorate --pretty=oneline --abbrev-commit
  lg        = log --oneline
  lgl       = log master.. --oneline
  lgm       = log main.. --oneline
  panic     = !tar cvf ../git_panic.tar *
  pu        = push
  put       = push -u origin
  pr        = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/pull/new/$(git rev-parse --abbrev-ref HEAD)\""
  rc        = rebase --continue
  riml      = rebase -i master --autosquash
  rim       = rebase -i main --autosquash
  rs        = restore --staged
  sq        = !sh -c 'REV=$(git rev-parse $1) && git commit --squash $@ && git rebase -i --autosquash $REV^' -
  st        = status
  stl       = stash list
  stp       = stash pop
  stu       = stash -u
  staged    = diff --cached
  sw        = switch
  swc       = switch -c
  undo      = reset --soft HEAD^
  who       = blame
[color]
  ui = true
[push]
  default = simple
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f
[core]
  excludesfile = ~/.gitignore
  ignorecase = false
[diff]
  tool = Kaleidoscope
[difftool]
  prompt = false
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[merge]
  tool = Kaleidoscope
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
[mergetool]
  keepBackup = false
[pull]
  rebase = true
[gpg]
  program = /usr/local/bin/gpg
